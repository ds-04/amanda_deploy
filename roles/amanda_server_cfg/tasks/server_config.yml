---

#D Simpson 2021, ds-04

#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.
#
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

- block:

   - name: Include vars from amanda_server (OS defs, ssh-key name)
     include_vars:
      dir: vars/
      files_matching: server_role_defaults.yml # this target is a symbolic link

   - name: Set fact for Debian
     set_fact:
      server_user_var: "{{ debian_user }}"
      server_user_home: "{{ debian_user_home }}"
      server_group: "{{ debian_group }}"
     when: ansible_distribution == "Debian"

   - name: Set fact for RedHat/Centos
     set_fact:
      server_user_var: "{{ redhat_user }}"
      server_user_home: "{{ redhat_user_home }}"
      server_group: "{{ redhat_group }}"
     when: ansible_os_family == "RedHat"

   - name: Debug Loop - cfg_dirs
     debug:
      msg: "{{ item.1 }}"
     loop: "{{ tape_configs|subelements('cfg_dirs') }}"

#   - name: Debug Loop - cfg_templates
#     debug:
#      msg: "{{ item.1 }}"
#     loop: "{{ tape_configs|subelements('cfg_templates') }}"

   - name: Create directories for the configuration
     file:
      state: directory
      owner: "{{ server_user_var }}"
      group: "{{ server_group }}"
      mode: '0750'
      path: "{{ item.1 }}"
     loop: "{{ tape_configs|subelements('cfg_dirs') }}"

   - name: Set fact to initialse localvar_templates for next task
     set_fact:
      # initialise
      localvar_templates: []

   # append to a list, local variable of template files
   - name: Set fact for templates
     set_fact:
      localvar_templates: "{{ localvar_templates + (item['cfg_templates']) }}"
     loop: "{{ tape_configs }}"

   - name: Template out amanda conf files for the configuration
     template:
      backup: 'yes'
      src: "{{ item[1] }}"
      dest: "{{ item[0].cfg_area }}/{{ item[1] | basename |regex_replace('.j2', '') }}"
      mode: 0644
      owner: "{{ server_user_var }}"
      group: "{{ server_group }}"
     with_nested:
       - "{{ tape_configs }}"
       - "{{ localvar_templates }}"

   #ideally this would not be shell... but currently easiest way to do multi-config
   - name: Create VTAPE slots as specified by the configuration (errors likely mean slotX dir exists, nothing to worry about)
     shell: "for vslot in `seq 1 {{ item.cfg_max_vtape }}`; do mkdir {{ item.cfg_vtaped }}/slot$vslot; done"
     with_items: "{{ tape_configs }}"
     ignore_errors: 'yes' #dirs may already exist

   #here becuase we used shell above
   - name: Ensure config vtape dir permissions set (recursive)
     file:
      state: directory
      owner: "{{ server_user_var }}"
      group: "{{ server_group }}"
      mode: '0750'
      recurse: 'yes'
      path: "{{ item.cfg_vtaped }}"
     with_items: "{{ tape_configs }}"

   - name: Check tape changer initialised
     stat:
      path: "{{ item.cfg_vtaped }}/data"
     register: sym
     with_items: "{{ tape_configs }}"

   - name: Print a debug message if /amanda/vtapes/slots/data NOT a link
     debug:
      msg: "islnk: {{ item.cfg_vtaped }}/data - MAY REQUIRE ATTENTION path doesn't exist)"
     with_items: "{{ tape_configs }}"
     when:
      - sym.stat.islnk is not defined

   - name: Print a debug message if /amanda/vtapes/slots/data IS a link
     debug:
      msg: "islnk: {{ item.cfg_vtaped }}/data is present"
     with_items: "{{ tape_configs }}"
     when:
      - sym.stat.islnk is defined

   - name: "Copy disklist for each configuration"
     template:
      backup: 'yes'
      dest: "{{ item.cfg_area }}/disklist"
      src: "{{ item.name }}_disklist.j2" #./cfgX_disklist.j2 in templates dir
      owner: "{{ server_user_var }}"
      group: "{{ server_group }}"
      mode: '0644'
     with_items: "{{ tape_configs }}"

   - name: Config completed, note the following actions
     debug:
      msg:
       - If no actions were performed, did you mean this (check if you set deploy_test_vtape_cfg='True')
       - Otherwise, run amcheck CONFIGNAME as the {{ server_user_var }} user to check a configuration
       - you may need to review your sshd or security settings to allow ssh - also refer to other roles
     with_items: "{{ tape_configs }}"

  become: 'True'

...
