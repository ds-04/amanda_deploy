---

# D Simpson 2021,2023 ds-04

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

- block:

   # this target is a symbolic link
   - name: Include vars from amanda_server (OS defs, ssh-key name)
     ansible.builtin.include_vars:
      dir: vars/
      files_matching: server_role_defaults.yml

   - name: Debug Loop - cfg_dirs
     ansible.builtin.debug:
      msg: "{{ item.1 }}"
     loop: "{{ tape_configs|subelements('cfg_dirs') }}"

   - name: Create directories for the configuration
     ansible.builtin.file:
      state: directory
      owner: "{{ server_user_discovered }}"
      group: "{{ server_user_discovered_group }}"
      mode: '0750'
      path: "{{ item.1 }}"
     loop: "{{ tape_configs|subelements('cfg_dirs') }}"

   - name: Set fact to initialse localvar_templates for next task
     ansible.builtin.set_fact:
      localvar_templates: []

   # append to a list, local variable of template files
   - name: Set fact for templates
     ansible.builtin.set_fact:
      localvar_templates: "{{ localvar_templates + (item['cfg_templates']) }}"
     loop: "{{ tape_configs }}"

   - name: Template out amanda conf files for the configuration
     ansible.builtin.template:
      backup: true
      src: "{{ item[1] }}"
      dest: "{{ item[0].cfg_area }}/{{ item[1] | basename | regex_replace('.j2', '') }}"
      mode: 0644
      owner: "{{ server_user_discovered }}"
      group: "{{ server_user_discovered_group }}"
     loop: "{{ lookup('subelements', tape_configs, 'cfg_templates') }}"

   - name: "Create a temporary template to generate vtape definitions"
     ansible.builtin.template:
      dest: "/tmp/vtape_var_content"
      src: "vtape_tmp.j2"
      owner: "{{ server_user_discovered }}"
      group: "{{ server_user_discovered_group }}"
      mode: '0700'

   - name: Read the template back, via slurp
     ansible.builtin.slurp:
      src: /tmp/vtape_var_content
     register: file_contents

   # deal with newlines
   - name: set variable for list
     ansible.builtin.set_fact:
      vtape_dir_list: "{{ (file_contents['content'] | b64decode).split('\n') }}"

   # remove empty elements
   - name: set variable for final list
     ansible.builtin.set_fact:
      vtape_dir_list_final: "{{ vtape_dir_list | select() }}"

   - name: Create directories for vtapes for each config
     ansible.builtin.file:
      state: directory
      path: "{{ item }}"
      owner: "{{ server_user_discovered }}"
      group: "{{ server_user_discovered_group }}"
      mode: '0750'
      recurse: true
     loop: "{{ vtape_dir_list_final }}"

   - name: Check tape changer initialised
     ansible.builtin.stat:
      path: "{{ item.cfg_vtaped }}/data"
     register: sym
     loop: "{{ tape_configs }}"

   - name: Print a debug message if /amanda/vtapes/slots/data NOT a link
     ansible.builtin.debug:
      msg: "islnk: {{ item.cfg_vtaped }}/data - MAY REQUIRE ATTENTION path doesn't exist)"
     loop: "{{ tape_configs }}"
     when:
      - sym.stat.islnk is not defined

   - name: Print a debug message if /amanda/vtapes/slots/data IS a link
     ansible.builtin.debug:
      msg: "islnk: {{ item.cfg_vtaped }}/data is present"
     loop: "{{ tape_configs }}"
     when:
      - sym.stat.islnk is defined

   # ./cfgX_disklist.j2 in templates
   - name: "Copy disklist for each configuration"
     ansible.builtin.template:
      backup: true
      dest: "{{ item.cfg_area }}/disklist"
      src: "{{ item.name }}_disklist.j2"
      owner: "{{ server_user_discovered }}"
      group: "{{ server_user_discovered_group }}"
      mode: '0644'
     loop: "{{ tape_configs }}"

  become: true

...
