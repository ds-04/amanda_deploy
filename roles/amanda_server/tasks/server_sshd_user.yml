---

# D Simpson 2021,2023 ds-04

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

- block:

   - name: add sshd block to disable password ssh for "{{ server_user_discovered }}"
     ansible.builtin.blockinfile:
      dest: /etc/ssh/sshd_config
      backup: true
      state: present
      block: "Match User {{ server_user_discovered }}
             \nPasswordAuthentication no
             \nAuthenticationMethods publickey"
      marker: "# {mark} ANSIBLE MANAGED BLOCK user {{ server_user_discovered }}"
     register: sshd_changed
     when: ansible_os_family != "Suse"

   # suse tumbleweed
   - name: SUSE distro - add sshd block to disable password ssh for "{{ server_user_discovered }}"
     ansible.builtin.blockinfile:
      dest: /etc/ssh/sshd_config.d/10-amanda_suse.conf
      backup: true
      create: true
      state: present
      block: "Match User {{ server_user_discovered }}
             \nPasswordAuthentication no
             \nAuthenticationMethods publickey"
      marker: "# {mark} ANSIBLE MANAGED BLOCK user {{ server_user_discovered }}"
     register: sshd_changed
     when: ansible_os_family == "Suse"

   - name: add pam.d sshd line to allow "{{ server_user_discovered }}"
     ansible.builtin.lineinfile:
      backup: true
      dest: /etc/pam.d/sshd
      state: present
      insertbefore: "^account.*required.*pam_nologin.so"
      line: "account    optional     pam_localuser.so"
     when: ansible_os_family != "Suse"

   - name: reload sshd service
     ansible.builtin.service:
      name: sshd
      state: reloaded
      enabled: true
     when: sshd_changed | bool

   - name: set "{{ server_user_discovered }}" shell and password lock
     ansible.builtin.user:
      name: "{{ server_user_discovered }}"
      # using instead of ansible module's password_lock
      password: '!'
      shell: /bin/bash

  become: true
...
